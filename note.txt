1. khi có v-bind: thì sẽ hiểu thành 1 cái biến, biến đó sẽ liên kết với phần dữ liệu mà mình lưu vào trong data

2. Event Handling: sử dụng v-on dùng để lắng nghe 1 cái sự kiện, sau khi lắng nghe xong sẽ chạy 1 đoạn code function nào đó

3. <form v-on:submit.prevent="onSubmit"></form> ===> the submit event will no longer reload the page

4. propagation: Ngăn chặn sự kiện của thằng CON lan tỏa ra thằng CHA

5. Computed: Viết biểu thức trực tiếp trong template rất tiện, nhưng chỉ dành cho những biểu thức có tính toán đơn giản. Những biểu thức phức tạp được viết theo cách đó sẽ khiến template cồng kềnh và khó bảo trì.
            Một computed property chỉ được tính toán lại khi những thành phần phụ thuộc của chúng thay đổi. Điều này có nghĩa: miễn là giá trị của message không thay đổi, thì những truy cập tới computed reversedMessage sẽ ngay lập tức trả về kết quả được tính toán trước đó mà không phải chạy lại hàm một lần nữa.

6. Two Way Bindings: Ràng buộc dữ liệu 2 chiều
                    Bạn có thể sử dụng directive v-model để tạo ràng buộc dữ liệu 2 chiều lên các phần tử form input và textarea. Vue sẽ tự động chọn cách phù hợp để cập nhật phần tử này dựa trên kiểu của input

7. v-if và v-show: v-if thì remove luôn cấu trúc DOM. Còn v-else chỉ ẩn đi về mặt giao diện
8. Muốn thông báo cho VueJS biết là 2 phần tử khác nhau hoàn toàn thì cho thêm thuộc tính key khác nhau là đc